{"name": "test_Login[case6]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <testcase.test_zr.Test_zrlog object at 0x00000115CDD97EE0>\ncase = {'': '', 'data': '', 'header': '', 'method': '', ...}\n\n    @pytest.mark.parametrize(\"case\", res)\n    def test_Login(self, case):\n>       result = Test_zrlog.reaDcase(case)\n\ntest_zr.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\supermrthod.py:18: in reaDcase\n    header = json.loads(case['header'])\nE:\\python\\lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nE:\\python\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x00000115C59EDF10>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nE:\\python\\lib\\json\\decoder.py:355: JSONDecodeError"}, "parameters": [{"name": "case", "value": "{'用例编号': '', '用例名称': '', 'method': '', 'url': '', 'header': '', 'data': '', '': '', '实际结果': \"2022-08-04 16:31:03,322 - test_zr.py[line:37] - INFO - 新增-7新增测试用例{'code': 200, 'body': {'stack': 'java.lang.RuntimeException: com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $\\\\n\\\\tat com.zrlog.util.ZrLogUtil.convertRequestBody(ZrLogUtil.java:41)\\\\n\\\\tat com.zrlog.admin.web.controller.api.AdminArticleController.create(AdminArticleController.java:43)\\\\n\\\\tat jdk.internal.reflect.GeneratedMethodAccessor80.invoke(Unknown Source)\\\\n\\\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\\\n\\\\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\\\\n\\\\tat com.jfinal.aop.Invocation.invoke(Invocation.java:97)\\\\n\\\\tat com.zrlog.admin.web.interceptor.AdminInterceptor.tryDoRender(AdminInterceptor.java:96)\\\\n\\\\tat com.zrlog.admin.web.interceptor.AdminInterceptor.adminPermission(AdminInterceptor.java:66)\\\\n\\\\tat com.zrlog.admin.web.interceptor.AdminInterceptor.intercept(AdminInterceptor.java:34)\\\\n\\\\tat com.zrlog.web.inteceptor.RouterInterceptor.intercept(RouterInterceptor.java:28)\\\\n\\\\tat com.jfinal.aop.Invocation.invoke(Invocation.java:91)\\\\n\\\\tat com.zrlog.blog.web.interceptor.MyI18nInterceptor.intercept(MyI18nInterceptor.java:22)\\\\n\\\\tat com.jfinal.aop.Invocation.invoke(Invocation.java:91)\\\\n\\\\tat com.zrlog.blog.web.interceptor.InitDataInterceptor.doIntercept(InitDataInterceptor.java:34)\\\\n\\\\tat com.zrlog.blog.web.interceptor.InitDataInterceptor.intercept(InitDataInterceptor.java:39)\\\\n\\\\tat com.jfinal.aop.Invocation.invoke(Invocation.java:91)\\\\n\\\\tat com.jfinal.core.ActionHandler.handle(ActionHandler.java:96)\\\\n\\\\tat com.zrlog.blog.web.handler.PluginHandler.handle(PluginHandler.java:38)\\\\n\\\\tat com.zrlog.blog.web.handler.BlogArticleHandler.handle(BlogArticleHandler.java:42)\\\\n\\\\tat com.zrlog.blog.web.handler.GlobalResourceHandler.handle(GlobalResourceHandler.java:61)\\\\n\\\\tat com.jfinal.core.JFinalFilter.doFilter(JFinalFilter.java:90)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\\\n\\\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\\\n\\\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\\\n\\\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\\\\n\\\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\\\n\\\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\\\n\\\\tat org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)\\\\n\\\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\\\n\\\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\\\\n\\\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\\\\n\\\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\\\n\\\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\\\\n\\\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)\\\\n\\\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\\\n\\\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\\\n\\\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\\\n\\\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\\\n\\\\tat java.base/java.lang.Thread.run(Thread.java:833)\\\\nCaused by: com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $\\\\n\\\\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:226)\\\\n\\\\tat com.google.gson.Gson.fromJson(Gson.java:932)\\\\n\\\\tat com.google.gson.Gson.fromJson(Gson.java:897)\\\\n\\\\tat com.google.gson.Gson.fromJson(Gson.java:846)\\\\n\\\\tat com.google.gson.Gson.fromJson(Gson.java:817)\\\\n\\\\tat com.zrlog.util.ZrLogUtil.convertRequestBody(ZrLogUtil.java:38)\\\\n\\\\t... 39 more\\\\nCaused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $\\\\n\\\\tat com.google.gson.stream.JsonReader.beginObject(JsonReader.java:386)\\\\n\\\\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:215)\\\\n\\\\t... 44 more\\\\n', 'message': 'com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $', 'error': 9999}, 'cookies': {'admin-token': '1#357051304736335749314B68675879356A57435733495146706D393679476C6D50614F70324147474B475370384236786F3959754B4C5850473831336534794D644F54773049567A465734536A326D4734323031564E3548776874724F6F7162337470386A57347543546B3D'}},\\n\"}"}], "start": 1659601973053, "stop": 1659601973053, "uuid": "334b21bf-5eb4-46e5-ab0c-4f60ab236be0", "historyId": "b15db398bec9206fbb1c0900eff63efa", "testCaseId": "71937e17d847f0126e9c3a71a7302b2b", "fullName": "testcase.test_zr.Test_zrlog#test_Login", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_zr"}, {"name": "subSuite", "value": "Test_zrlog"}, {"name": "host", "value": "PC-20200812QIHW"}, {"name": "thread", "value": "35344-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_zr"}]}